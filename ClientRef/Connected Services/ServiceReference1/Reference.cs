//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientRef.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IVisitorContract")]
    public interface IVisitorContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/GetAllVisitors", ReplyAction="http://tempuri.org/IVisitorContract/GetAllVisitorsResponse")]
        EX.Model.DbLayer.Visitor[] GetAllVisitors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/GetAllVisitors", ReplyAction="http://tempuri.org/IVisitorContract/GetAllVisitorsResponse")]
        System.Threading.Tasks.Task<EX.Model.DbLayer.Visitor[]> GetAllVisitorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/GetAllWithMess", ReplyAction="http://tempuri.org/IVisitorContract/GetAllWithMessResponse")]
        EX.Model.Repository.VisitorsWithMess GetAllWithMess(string m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/GetAllWithMess", ReplyAction="http://tempuri.org/IVisitorContract/GetAllWithMessResponse")]
        System.Threading.Tasks.Task<EX.Model.Repository.VisitorsWithMess> GetAllWithMessAsync(string m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/GetVisitor", ReplyAction="http://tempuri.org/IVisitorContract/GetVisitorResponse")]
        EX.Model.DbLayer.Visitor GetVisitor(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/GetVisitor", ReplyAction="http://tempuri.org/IVisitorContract/GetVisitorResponse")]
        System.Threading.Tasks.Task<EX.Model.DbLayer.Visitor> GetVisitorAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/AddOrUpdate", ReplyAction="http://tempuri.org/IVisitorContract/AddOrUpdateResponse")]
        void AddOrUpdate(EX.Model.DbLayer.Visitor visitor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/AddOrUpdate", ReplyAction="http://tempuri.org/IVisitorContract/AddOrUpdateResponse")]
        System.Threading.Tasks.Task AddOrUpdateAsync(EX.Model.DbLayer.Visitor visitor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/RemoveVisitor", ReplyAction="http://tempuri.org/IVisitorContract/RemoveVisitorResponse")]
        void RemoveVisitor(EX.Model.DbLayer.Visitor visitor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/RemoveVisitor", ReplyAction="http://tempuri.org/IVisitorContract/RemoveVisitorResponse")]
        System.Threading.Tasks.Task RemoveVisitorAsync(EX.Model.DbLayer.Visitor visitor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/RemoveVisistorById", ReplyAction="http://tempuri.org/IVisitorContract/RemoveVisistorByIdResponse")]
        void RemoveVisistorById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVisitorContract/RemoveVisistorById", ReplyAction="http://tempuri.org/IVisitorContract/RemoveVisistorByIdResponse")]
        System.Threading.Tasks.Task RemoveVisistorByIdAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVisitorContractChannel : ClientRef.ServiceReference1.IVisitorContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VisitorContractClient : System.ServiceModel.ClientBase<ClientRef.ServiceReference1.IVisitorContract>, ClientRef.ServiceReference1.IVisitorContract {
        
        public VisitorContractClient() {
        }
        
        public VisitorContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VisitorContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VisitorContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VisitorContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EX.Model.DbLayer.Visitor[] GetAllVisitors() {
            return base.Channel.GetAllVisitors();
        }
        
        public System.Threading.Tasks.Task<EX.Model.DbLayer.Visitor[]> GetAllVisitorsAsync() {
            return base.Channel.GetAllVisitorsAsync();
        }
        
        public EX.Model.Repository.VisitorsWithMess GetAllWithMess(string m) {
            return base.Channel.GetAllWithMess(m);
        }
        
        public System.Threading.Tasks.Task<EX.Model.Repository.VisitorsWithMess> GetAllWithMessAsync(string m) {
            return base.Channel.GetAllWithMessAsync(m);
        }
        
        public EX.Model.DbLayer.Visitor GetVisitor(int Id) {
            return base.Channel.GetVisitor(Id);
        }
        
        public System.Threading.Tasks.Task<EX.Model.DbLayer.Visitor> GetVisitorAsync(int Id) {
            return base.Channel.GetVisitorAsync(Id);
        }
        
        public void AddOrUpdate(EX.Model.DbLayer.Visitor visitor) {
            base.Channel.AddOrUpdate(visitor);
        }
        
        public System.Threading.Tasks.Task AddOrUpdateAsync(EX.Model.DbLayer.Visitor visitor) {
            return base.Channel.AddOrUpdateAsync(visitor);
        }
        
        public void RemoveVisitor(EX.Model.DbLayer.Visitor visitor) {
            base.Channel.RemoveVisitor(visitor);
        }
        
        public System.Threading.Tasks.Task RemoveVisitorAsync(EX.Model.DbLayer.Visitor visitor) {
            return base.Channel.RemoveVisitorAsync(visitor);
        }
        
        public void RemoveVisistorById(int Id) {
            base.Channel.RemoveVisistorById(Id);
        }
        
        public System.Threading.Tasks.Task RemoveVisistorByIdAsync(int Id) {
            return base.Channel.RemoveVisistorByIdAsync(Id);
        }
    }
}
