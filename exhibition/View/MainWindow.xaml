<Window x:Class="exhibition.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:exhibition"
        xmlns:vm="clr-namespace:exhibition.ViewModel"
        xmlns:vmi="clr-namespace:exhibition.ViewModel.infrostructure"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" WindowStartupLocation="Manual" WindowState="Maximized">

    <Window.Resources>
        <vm:ViewModel x:Key="view_model"/>
        <vmi:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
    </Window.Resources>

    <Grid>
        <TabControl x:Name="tabControl" HorizontalAlignment="Stretch" Margin="10,10,10,10" VerticalAlignment="Stretch">

            <TabItem Header="Главная" DataContext="{StaticResource view_model}">
                <Grid Name="ms" Background="#FFE5E5E5" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="12*"/>
                        <RowDefinition Height="60*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <Label HorizontalAlignment="Center" VerticalAlignment="Center" Margin="20,20,0,20" Content="код:"/>
                        <TextBox Name="tb_code" Visibility="Visible" Text="Введите код" Foreground="Gray" Width="300" Height="50" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="20" Padding="10" FontSize="20"/>
                        <TextBox Width="100" TextAlignment="Center" Margin="5" Background="#FFE5E5E5" Foreground="Gray" TextWrapping="Wrap" VerticalContentAlignment="Center" Text="Цвет бейджа"/>
                        <TextBox Width="100" TextAlignment="Center" Margin="5" Background="#FFE5E5E5" Foreground="Gray" TextWrapping="Wrap" VerticalContentAlignment="Center" Text="Статус оплаты"/>
                        <Button Click="Button_Click" >Обновить данные</Button>
                    </StackPanel>
                    <DataGrid x:Name="workgrid" Grid.Row="1" Margin="10" AutoGenerateColumns="False" ItemsSource="{Binding  VisitorCollection, UpdateSourceTrigger=PropertyChanged}">
                        <DataGrid.Resources>
                            
                            <vmi:BindingProxy x:Key="ColumnChecked1" Data="{Binding ColumnChecked[0], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked2" Data="{Binding ColumnChecked[1], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked3" Data="{Binding ColumnChecked[2], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked4" Data="{Binding ColumnChecked[3], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked5" Data="{Binding ColumnChecked[4], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked6" Data="{Binding ColumnChecked[5], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked7" Data="{Binding ColumnChecked[6], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked8" Data="{Binding ColumnChecked[7], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked9" Data="{Binding ColumnChecked[8], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked10" Data="{Binding ColumnChecked[9], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked11" Data="{Binding ColumnChecked[10], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked12" Data="{Binding ColumnChecked[11], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked13" Data="{Binding ColumnChecked[12], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked14" Data="{Binding ColumnChecked[13], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked15" Data="{Binding ColumnChecked[14], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="ColumnChecked16" Data="{Binding ColumnChecked[15], UpdateSourceTrigger=PropertyChanged}" />


                            <vmi:BindingProxy x:Key="Header1" Data="{Binding Alias[0], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header2" Data="{Binding Alias[1], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header3" Data="{Binding Alias[2], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header4" Data="{Binding Alias[3], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header5" Data="{Binding Alias[4], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header6" Data="{Binding Alias[5], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header7" Data="{Binding Alias[6], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header8" Data="{Binding Alias[7], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header9" Data="{Binding Alias[8], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header10" Data="{Binding Alias[9], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header11" Data="{Binding Alias[10], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header12" Data="{Binding Alias[11], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header13" Data="{Binding Alias[12], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header14" Data="{Binding Alias[13], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header15" Data="{Binding Alias[14], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Header16" Data="{Binding Alias[15], UpdateSourceTrigger=PropertyChanged}" />
                            
                            <vmi:BindingProxy x:Key="Width1" Data="{Binding  Width[0], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width2" Data="{Binding  Width[1], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width3" Data="{Binding  Width[2], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width4" Data="{Binding  Width[3], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width5" Data="{Binding  Width[4], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width6" Data="{Binding  Width[5], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width7" Data="{Binding  Width[6], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width8" Data="{Binding  Width[7], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width9" Data="{Binding  Width[8], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width10" Data="{Binding  Width[9], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width11" Data="{Binding  Width[10], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width12" Data="{Binding  Width[11], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width13" Data="{Binding  Width[12], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width14" Data="{Binding  Width[13], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width15" Data="{Binding  Width[14], UpdateSourceTrigger=PropertyChanged}" />
                            <vmi:BindingProxy x:Key="Width16" Data="{Binding  Width[15], UpdateSourceTrigger=PropertyChanged}" />

                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header1}}" 
                                Binding="{Binding Id}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width1}}" 
                                Visibility="{Binding Data, Converter={StaticResource boolToVisibilityConverter}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header2}}" 
                                Binding="{Binding Collumn1}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width2}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked2}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header3}}" 
                                Binding="{Binding Collumn2}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width3}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked3}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header4}}" 
                                Binding="{Binding Collumn3}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width4}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked4}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header5}}" 
                                Binding="{Binding Collumn4}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width5}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked5}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header6}}" 
                                Binding="{Binding Collumn5}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width6}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked6}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header7}}" 
                                Binding="{Binding Collumn6}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width7}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked7}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header8}}" 
                                Binding="{Binding Collumn7}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width8}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked8}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header9}}" 
                                Binding="{Binding Collumn8}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width9}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked9}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header10}}" 
                                Binding="{Binding Collumn9}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width10}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked10}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header11}}" 
                                Binding="{Binding Collumn10}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width11}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked11}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header12}}" 
                                Binding="{Binding Collumn11}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width12}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked12}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header13}}" 
                                Binding="{Binding Collumn12}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width13}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked13}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header14}}" 
                                Binding="{Binding Collumn13}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width14}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked14}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header15}}" 
                                Binding="{Binding Collumn14}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width15}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked15}}"/>
                            <DataGridTextColumn 
                                Header="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Header16}}" 
                                Binding="{Binding Collumn15}" 
                                Width="{Binding Data, UpdateSourceTrigger=PropertyChanged, Source={StaticResource Width16}}" 
                                Visibility="{Binding Data, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}, Source={StaticResource ColumnChecked16}}"/>

                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Файл" DataContext="{StaticResource view_model}">
                <Grid Background="#FFE5E5E5"  >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200*"/>
                        <ColumnDefinition Width="537*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel >
                        <Label Margin="10" Content="{Binding _ProgressBar.Status, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Margin="10" Command="{Binding AddDataFromFileToDatabase, UpdateSourceTrigger=PropertyChanged}" Content="Загрузить данные из файла"/>
                        <Button Margin="10" Content="Удалить данные файл"/>
                        <Button Margin="10" Content="Выгрузить данные в файл Exel"/>
                    </StackPanel>
                    <DataGrid Grid.Column="1" Margin="10,55,10,10" AutoGenerateColumns="True" ItemsSource="{Binding  VisitorCollection, UpdateSourceTrigger=PropertyChanged}"/>
                    <ProgressBar Grid.Column="1"
                                 HorizontalAlignment="Left" 
                                 Height="30" Margin="10,10,0,0" 
                                 VerticalAlignment="Top" 
                                 Width="538" 
                                 RenderTransformOrigin="0.6,-2"
                                 Value="{Binding _ProgressBar.Progress}"
                                 Visibility="Visible"/>
                </Grid>
            </TabItem>
            <TabItem Header="Конфигурации">
                <Grid Background="#FFE5E5E5">
                    <TabControl TabStripPlacement="Left">
                        <TabControl.Resources>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ContentPresenter Content="{TemplateBinding Content}">
                                                <ContentPresenter.LayoutTransform>
                                                    <RotateTransform Angle="0" />
                                                </ContentPresenter.LayoutTransform>
                                            </ContentPresenter>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="3" />
                            </Style>
                        </TabControl.Resources>
                        <TabItem Header="Поля этикетки">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="300*"/>
                                    <ColumnDefinition Width="150*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0">
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="20" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,20" Width="150"/>
                                        <ComboBox Margin="10,20" Width="100"/>
                                        <xctk:ShortUpDown Margin="20" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="20" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,20" Width="150"/>
                                        <ComboBox Margin="10,20" Width="100"/>
                                        <xctk:ShortUpDown Margin="20" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="20" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,20" Width="150"/>
                                        <ComboBox Margin="10,20" Width="100"/>
                                        <xctk:ShortUpDown Margin="20" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="20" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,20" Width="150"/>
                                        <ComboBox Margin="10,20" Width="100"/>
                                        <xctk:ShortUpDown Margin="20" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="20" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,20" Width="150"/>
                                        <ComboBox Margin="10,20" Width="100"/>
                                        <xctk:ShortUpDown Margin="20" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="20" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,20" Width="150"/>
                                        <ComboBox Margin="10,20" Width="100"/>
                                        <xctk:ShortUpDown Margin="20" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="20" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,20" Width="150"/>
                                        <ComboBox Margin="10,20" Width="100"/>
                                        <xctk:ShortUpDown Margin="20" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Grid.Column="2">
                                    <ListBox Margin="20" x:Name="listBox" Height="100" Width="200"/>
                                    <Button Margin="20">Создать конфигурацию</Button>
                                    <Button Margin="20">Удалить конфигурацию</Button>
                                    <Button Margin="20">Применить конфигурацию</Button>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Цвет бейджа" />
                        <TabItem Header="База данных" DataContext="{StaticResource view_model}">
                        </TabItem>
                        <TabItem Header="Рабочий стол">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="300*"/>
                                    <ColumnDefinition Width="150*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0">
                                    <StackPanel Orientation="Horizontal" Height="30">
                                        <CheckBox Name="chb_fn" Margin="20,5" VerticalAlignment="Center" IsChecked="false"/>
                                        <TextBox Name="tb_fn" Text="FirstName" Foreground="Gray" Margin="10,5" Width="150"/>
                                        <ComboBox Name="cob_fn" Text="Имя" IsEditable="True" Foreground="Black" Margin="10,5" Width="100"/>
                                        <xctk:ShortUpDown Margin="20,5" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="20" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,20" Width="150"/>
                                        <ComboBox Margin="10,20" Width="100"/>
                                        <xctk:ShortUpDown Margin="20" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="20" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,20" Width="150"/>
                                        <ComboBox Margin="10,20" Width="100"/>
                                        <xctk:ShortUpDown Margin="20" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="20" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,20" Width="150"/>
                                        <ComboBox Margin="10,20" Width="100"/>
                                        <xctk:ShortUpDown Margin="20" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="20" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,20" Width="150"/>
                                        <ComboBox Margin="10,20" Width="100"/>
                                        <xctk:ShortUpDown Margin="20" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="20" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,20" Width="150"/>
                                        <ComboBox Margin="10,20" Width="100"/>
                                        <xctk:ShortUpDown Margin="20" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="20" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,20" Width="150"/>
                                        <ComboBox Margin="10,20" Width="100"/>
                                        <xctk:ShortUpDown Margin="20" Width="50"/>
                                        <StackPanel/>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Grid.Column="2">
                                    <ListBox Margin="20" x:Name="listBox1" Height="100" Width="200"/>
                                    <Button Margin="20">Создать конфигурацию</Button>
                                    <Button Margin="20">Удалить конфигурацию</Button>
                                    <Button Margin="20">Применить конфигурацию</Button>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Отчёты" DataContext="{StaticResource view_model }">
                            <Grid  VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="212*"></RowDefinition>
                                    <RowDefinition Height="153*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="40"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <ListBox Grid.Row="0" ItemsSource="{Binding DsColumnSettingCollection}" SelectedItem="{Binding SelectedCollumnSetting, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Margin="20,20,20,5" VerticalContentAlignment="Stretch" VerticalAlignment="Stretch">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Margin="5" Orientation="Horizontal" HorizontalAlignment="Center">
                                                    <TextBlock Text="{Binding Name}" Width="200" Margin="5" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                    <WrapPanel  Grid.Row="1" Orientation="Horizontal" Margin="20,0" HorizontalAlignment="Center" Width="auto">
                                        <Button Margin="5" Padding="5" Command="{Binding AddCollumn}" >Добавить колонку</Button>
                                        <Button Margin="5" Padding="5" Command="{Binding RemoveCollumn}" >Удалить колонку</Button>
                                    </WrapPanel>
                                </Grid>
                                <Grid  Grid.Column="1" Grid.Row="0" VerticalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" ></RowDefinition>
                                        <RowDefinition Height="40"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <ListBox ItemsSource="{Binding DisplaySettingCollection}" SelectedItem="{Binding  SelectedDisplaySetting, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="20,20,20,5" Grid.Row="0" >
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Margin="5" Orientation="Horizontal" HorizontalAlignment="Center"  >
                                                    <TextBlock Margin="5" Text="{Binding Name}" />
                                                    <CheckBox IsChecked="{Binding IsSelected, Mode=OneWay}"   Margin="5" RenderTransformOrigin="0.5,0.5">
                                                        <CheckBox.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform/>
                                                                <SkewTransform/>
                                                                <RotateTransform Angle="0.315"/>
                                                                <TranslateTransform/>
                                                            </TransformGroup>
                                                        </CheckBox.RenderTransform>
                                                    </CheckBox>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <WrapPanel Orientation="Horizontal" Margin="20,0" HorizontalAlignment="Center" Grid.Row="1" Width="auto">
                                        <Button Margin="5" Padding="5" Command="{Binding AddSetting}" >Добавить настройку</Button>
                                        <Button Margin="5" Padding="5" Command="{Binding DelSetting}" >Удалить настройку</Button>
                                        <Button Margin="5" Padding="5" Command="{Binding ChangeDisplaySettingDefault}">Сделать выделенную настройку текущей</Button>
                                    </WrapPanel>
                                </Grid>
                                <StackPanel Grid.Column="1" Grid.Row="1" Margin="20" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="5">
                                        <Label Margin="10,5">Настройка</Label>
                                        <TextBox Width="200" Margin="5" Text="{Binding SelectedDisplaySetting.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="5">
                                        <Label Margin="10,5">Имя</Label>
                                        <TextBox Width="200" Margin="5" Text="{Binding SelectedCollumnSetting.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="5">
                                        <Label Margin="5">Алиас</Label>
                                        <TextBox Width="200" Margin="5" Text="{Binding SelectedCollumnSetting.Alias, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="5">
                                        <Label Margin="5">Видимость</Label>
                                        <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding SelectedCollumnSetting.Visible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <Label Margin="20,5,5,5">Ширина</Label>
                                        <xctk:ShortUpDown Margin="8" Width="75" Text="{Binding SelectedCollumnSetting.Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                    <Button Margin="5" Padding="5" Command="{Binding SaveChanges}" Click="Button_Click_2" >Сохранить изменения</Button>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem Header="Отчёты">
                <Grid Background="#FFE5E5E5">
                    <TabControl TabStripPlacement="Left" Grid.ColumnSpan="2">
                        <TabControl.Resources>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ContentPresenter Content="{TemplateBinding Content}">
                                                <ContentPresenter.LayoutTransform>
                                                    <RotateTransform Angle="0" />
                                                </ContentPresenter.LayoutTransform>
                                            </ContentPresenter>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="3" />
                            </Style>
                        </TabControl.Resources>
                        <TabItem Header="Зарегистрированные" DataContext="{StaticResource view_model }">

                            <ListBox ItemsSource="{Binding VisitorCollection}"  Margin="20,20,20,5" Grid.Row="0" >
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Margin="5" Orientation="Horizontal" HorizontalAlignment="Center"  >
                                            <TextBlock Margin="5" Text="{Binding Id}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </TabItem>
                        <TabItem Header="Актуализированные" >
                            <TabItem.DataContext>
                                <vm:ViewModel />
                            </TabItem.DataContext>
                            <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding VisitorCollection}">
                            </DataGrid>

                            
                        </TabItem>
                        <TabItem Header="Неактуализированные" />
                        <TabItem Header="Созданные" />
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem Header="Сеть">
                <Grid Background="#FFE5E5E5"/>
            </TabItem>

            <TabItem Header="Администрирование">
                <Grid Background="#FFE5E5E5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="267*"/>
                        <ColumnDefinition Width="467*"/>
                    </Grid.ColumnDefinitions>
                    <TabControl TabStripPlacement="Left" Grid.ColumnSpan="2">
                        <TabControl.Resources>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ContentPresenter Content="{TemplateBinding Content}">
                                                <ContentPresenter.LayoutTransform>
                                                    <RotateTransform Angle="0" />
                                                </ContentPresenter.LayoutTransform>
                                            </ContentPresenter>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="3" />
                            </Style>
                        </TabControl.Resources>
                        <TabItem Header="Регистрация"/>
                        <TabItem Header="Авторизация" />
                        <TabItem Header="Управление доступом" />
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem Header="Помощь">
                <Grid Background="#FFE5E5E5"/>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
